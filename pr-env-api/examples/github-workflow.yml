name: PR Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  pr-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set environment variables
        id: env
        run: |
          echo "SERVICE_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "PR_ACTION=${{ github.event.action }}" >> $GITHUB_OUTPUT
          echo "DOMAIN=${SERVICE_NAME}-pr-${PR_NUMBER}.tailf31c84.ts.net" >> $GITHUB_OUTPUT

      # Handle PR opened/updated
      - name: Setup GCP credentials
        if: github.event.action != 'closed'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Docker Buildx
        if: github.event.action != 'closed'
        uses: docker/setup-buildx-action@v2

      - name: Login to GCP Container Registry
        if: github.event.action != 'closed'
        uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and push Docker image
        if: github.event.action != 'closed'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: europe-west1-docker.pkg.dev/vertuoza-qa/vertuoza/${{ steps.env.outputs.SERVICE_NAME }}:pr-${{ steps.env.outputs.PR_NUMBER }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-actions

      - name: Create/Update PR environment
        if: github.event.action != 'closed'
        run: |
          # Read .pr-env file if it exists
          ENV_VARS=()
          if [ -f .pr-env ]; then
            while IFS= read -r line || [[ -n "$line" ]]; do
              # Skip comments and empty lines
              if [[ ! "$line" =~ ^#.*$ ]] && [[ ! -z "$line" ]]; then
                ENV_VARS+=("$line")
              fi
            done < .pr-env
          fi

          # Convert environment variables to JSON array
          ENV_JSON="[]"
          if [ ${#ENV_VARS[@]} -gt 0 ]; then
            ENV_JSON="["
            for var in "${ENV_VARS[@]}"; do
              ENV_JSON+="\"$var\","
            done
            ENV_JSON="${ENV_JSON%,}]"
          fi

          # Create or update the environment
          curl -X POST https://pr-env-api.tailf31c84.ts.net/api/environments \
            -H "Content-Type: application/json" \
            -d '{
              "service_name": "${{ steps.env.outputs.SERVICE_NAME }}",
              "pr_number": ${{ steps.env.outputs.PR_NUMBER }},
              "image_url": "europe-west1-docker.pkg.dev/vertuoza-qa/vertuoza/${{ steps.env.outputs.SERVICE_NAME }}:pr-${{ steps.env.outputs.PR_NUMBER }}",
              "config": {
                "environment": '"$ENV_JSON"'
              }
            }'

      - name: Comment on PR
        if: github.event.action != 'closed'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `https://${{ steps.env.outputs.DOMAIN }}`;

            github.rest.issues.createComment({
              issue_number: ${{ steps.env.outputs.PR_NUMBER }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ PR environment deployed at: ${url}\n\nThis environment will be automatically updated when you push new commits to this PR.`
            });

      # Handle PR closed
      - name: Remove PR environment
        if: github.event.action == 'closed'
        run: |
          curl -X DELETE https://pr-env-api.tailf31c84.ts.net/api/environments/${{ steps.env.outputs.SERVICE_NAME }}-pr-${{ steps.env.outputs.PR_NUMBER }}

      - name: Comment on PR about removal
        if: github.event.action == 'closed'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.env.outputs.PR_NUMBER }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ§¹ PR environment has been removed.`
            });
