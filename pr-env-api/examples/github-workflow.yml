name: PR Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  # Common setup job to set environment variables
  setup:
    runs-on: ubuntu-latest
    outputs:
      service_name: ${{ steps.env.outputs.SERVICE_NAME }}
      pr_number: ${{ steps.env.outputs.PR_NUMBER }}
      pr_action: ${{ steps.env.outputs.PR_ACTION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set environment variables
        id: env
        run: |
          echo "SERVICE_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "PR_ACTION=${{ github.event.action }}" >> $GITHUB_OUTPUT

  # Build main service image
  build-main-service:
    needs: setup
    if: needs.setup.outputs.pr_action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push main service image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/vertuoza/${{ needs.setup.outputs.service_name }}:pr-${{ needs.setup.outputs.pr_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Build migrations image
  build-migrations:
    needs: setup
    if: needs.setup.outputs.pr_action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push migrations image
        uses: docker/build-push-action@v4
        with:
          context: ./migrations  # Adjust this path to where your migrations Dockerfile is located
          push: true
          tags: ghcr.io/vertuoza/${{ needs.setup.outputs.service_name }}-migrations:pr-${{ needs.setup.outputs.pr_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Manage PR environment
  manage-environment:
    needs: [setup, build-main-service, build-migrations]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Connect to Tailscale
        if: needs.setup.outputs.pr_action != 'closed'
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-actions

      # Use the custom PR Environment action
      - name: Manage PR Environment
        uses: vertuoza/github-actions/pr-environment@main
        with:
          repository_name: ${{ needs.setup.outputs.service_name }}
          pr_number: ${{ needs.setup.outputs.pr_number }}
          pr_action: ${{ needs.setup.outputs.pr_action }}
          services_json: |
            [
              {
                "name": "${{ needs.setup.outputs.service_name }}",
                "image_url": "ghcr.io/vertuoza/${{ needs.setup.outputs.service_name }}:pr-${{ needs.setup.outputs.pr_number }}"
              },
              {
                "name": "${{ needs.setup.outputs.service_name }}-migrations",
                "image_url": "ghcr.io/vertuoza/${{ needs.setup.outputs.service_name }}-migrations:pr-${{ needs.setup.outputs.pr_number }}"
              }
            ]
          github_token: ${{ secrets.GITHUB_TOKEN }}
