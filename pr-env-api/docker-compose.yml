version: '3'

services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: pr-env-api-ts
    hostname: pr-env-api
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY}
      - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      - TS_SERVE_CONFIG=/config/pr-env-api.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ./config:/config
      - pr-env-api-ts-state:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    networks:
      - vertuoza-network

  pr-env-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pr-env-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PORT=3000
      - NODE_ENV=production
      - TAILSCALE_DOMAIN=${TAILSCALE_DOMAIN:-tailf31c84.ts.net}
      - DB_PATH=/app/data/pr-environments.db
      - LOG_LEVEL=${LOG_LEVEL:-info}
    networks:
      - vertuoza-network
    depends_on:
      - tailscale

networks:
  vertuoza-network:
    external: true
    name: "vertuoza-network"

volumes:
  pr-env-api-ts-state:
    driver: local
