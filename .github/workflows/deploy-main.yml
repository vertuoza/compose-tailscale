name: Deploy to Remote Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper rsync

      - name: Set up Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_CLIENT_SECRET }}
          tags: tag:ci

      - name: Wait for Tailscale to connect
        run: sleep 10  # Give Tailscale a moment to establish connection

      - name: Transfer repository to remote server
        env:
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
        run: |
          # Create the destination directory if it doesn't exist
          ssh -o "StrictHostKeyChecking no" root@$REMOTE_HOST "mkdir -p ~/compose-tailscale"

          # Use rsync to transfer files, excluding .git and preserving specific directories
          rsync -az --delete --no-times --size-only \
            --exclude='.git/' \
            --exclude='data/**' \
            --exclude='logs/**' \
            --exclude='state/**' \
            --exclude='*.env' \
            ./ root@$REMOTE_HOST:~/compose-tailscale/

          echo "Repository transferred successfully"

      - name: Rebuild API on remote server
        env:
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
        run: |
          # Navigate to the API directory and rebuild
          ssh -o "StrictHostKeyChecking no" root@$REMOTE_HOST "cd ~/compose-tailscale && docker compose up -d --build"

          echo "API rebuilt successfully"
